nord0 = #2e3440
nord1 = #3b4252
nord2 = #434c5e
nord3 = #4c566a
nord4 = #d8dee9
nord5 = #e5e9f0
nord6 = #eceff4
nord7 = #8fbcbb
nord8 = #88c0d0
nord9 = #81a1c1
nord10 = #5e81ac
nord11 = #bf616a
nord12 = #d08770
nord13 = #ebcb8b
nord14 = #a3be8c
nord15 = #b48ead

set_pixel_size(2)

font_img = load("font.png")
set_key_color(font_img, BLACK)
set_font(0x20, font_img, 16, 6)

app_icon = load("icon.png")

last_xsize = -1
last_ysize = -1

running = 1
changed = 1
is_down = 0

frames = 0
start_timer(0)

include "mem.pixi"

include "buttons.pixi"
include "roll.pixi"
include "options.pixi"

include "organya.pixi"
include "sampler.pixi"

// Notifications
notif_msg = 0
notif_colour = 0
notif_time = 0
NOTIF_DUR = 5000

fn send_notif($msg, $colour) {
    if (notif_msg != 0) { remove(notif_msg) }
    notif_msg = clone($msg)
    notif_colour = $colour
    notif_time = get_timer(0)
    changed = 1
}

boot_workspace()

track_btns = new(16)
track_hotkeys = "QWERTYUI"

last_track_btn = 0

fn update_track_btns() {
    $top = -WINDOW_YSIZE div 2 + 19
    $bottom = roll_y + roll_h - roll_vol_h - roll_pan_h
    if (in_options) {
        $bottom = roll_y + roll_h
    }
    // Place the last pressed track button at the anchor
    $offset = floor(($top - $bottom) * 0.382) + last_track_btn * 19 + 10
    $max = 19 * 16 - ($bottom - $top)
    if ($offset > $max) { $offset = $max }
    if ($offset < 0) { $offset = 0 }

    $i = 0
    while ($i < 16) {
        if (roll_track_sel & (1 << $i)) {
            track_btns[$i].alphas = 0xf8c0
            track_btns[$i].fg = nord6
        } else {
            track_btns[$i].alphas = 0xd0ff
            track_btns[$i].fg = nord0
        }
        track_btns[$i].y = $top + 19 * $i - $offset
        $i + 1
    }
}

fn switch_track_cb($sender) {
    switch_track($sender.track_idx)
    last_track_btn = $sender.track_idx
    update_track_btns()
    // roll_changed is set to 1 in switch_track()
    // so the screen will be redrawn
}

$i = 0
while ($i < 16) {
    $s = new(1, 1, INT8)
    if ($i < 8) {
        num_to_str($s, $i + 1)
    } else {
        $s[0] = track_hotkeys[$i - 8]
    }
    track_btns[$i] =
        add_btn(0, 0, 19, 19, $s, track_colours[$i], nord6, 0, switch_track_cb)
    track_btns[$i].track_idx = $i
    $i + 1
}

update_track_btns()

menu_btns = new(12)
menu_btns_text = new(12)
menu_btns_bg = new(12)

menu_btns_text[0] = "New"
menu_btns_text[1] = "Open"
menu_btns_text[2] = "Save"
menu_btns_text[3] = "Undo"
menu_btns_text[4] = "Redo"
menu_btns_text[5] = "Cut"
menu_btns_text[6] = "Copy"
menu_btns_text[7] = "Paste"
menu_btns_text[8] = "Play"
menu_btns_text[9] = "Options"
menu_btns_text[10] = "Config"

menu_btns_text[0].shortcut = 'n'
menu_btns_text[1].shortcut = 'o'
menu_btns_text[2].shortcut = 's'
menu_btns_text[3].shortcut = 'z'
menu_btns_text[4].shortcut = 0
menu_btns_text[5].shortcut = 'x'
menu_btns_text[6].shortcut = 'c'
menu_btns_text[7].shortcut = 'v'
menu_btns_text[8].shortcut = 0
menu_btns_text[9].shortcut = 'p'
menu_btns_text[10].shortcut = ','

menu_btns_bg[0] = nord10
menu_btns_bg[1] = nord10
menu_btns_bg[2] = nord10
menu_btns_bg[3] = nord9
menu_btns_bg[4] = nord9
menu_btns_bg[5] = nord7
menu_btns_bg[6] = nord7
menu_btns_bg[7] = nord7
menu_btns_bg[8] = nord8
menu_btns_bg[9] = nord8
menu_btns_bg[10] = nord8

menu_btns_text[0].cb = menu_new_file
menu_btns_text[1].cb = menu_open_file
menu_btns_text[2].cb = menu_save_file
menu_btns_text[3].cb = roll_undo
menu_btns_text[4].cb = roll_redo
menu_btns_text[5].cb = {
    if (roll_shift) { roll_clearsel() } else { roll_cut() }
}
menu_btns_text[6].cb = { roll_copy(1) }
menu_btns_text[7].cb = roll_paste
menu_btns_text[8].cb = {
    roll_toggle_play()
    if (roll_playing) {
        menu_btns[8].text = "Stop"
    } else {
        menu_btns[8].text = "Play"
    }
}
menu_btns_text[9].cb = {
    in_options ^ 1
    if (in_options) {
        menu_btns[9].text = "PnoRoll"
        btns_cnt = all_btn_cnt
    } else {
        menu_btns[9].text = "Options"
        btns_cnt = normal_btn_cnt
    }
    update_track_btns()
    changed = 1
}
menu_btns_text[10].cb = {
    prefs_dialog()
}

$i = 0
while ($i < 11) {
    $w = get_text_xsize(menu_btns_text[$i]) + 12
    menu_btns[$i] =
        add_btn(0, 0, $w, 19, menu_btns_text[$i],
            menu_btns_bg[$i], nord6, 0xd0ff, menu_btns_text[$i].cb)
    $i + 1
}

normal_btn_cnt = btns_cnt
options_init()
all_btn_cnt = btns_cnt
btns_cnt = normal_btn_cnt

fn on_resize($w, $h) {
    $i = 0
    while ($i < 16) {
        track_btns[$i].x = -$w div 2
        track_btns[$i].y = -$h div 2 + ($i + 1) * 19 + ($i >= 8)
        $i + 1
    }

    $i = 0
    $x = -$w div 2 + 19
    while ($i < 12) {
        if ($i == 0 || menu_btns_bg[$i] != menu_btns_bg[$i - 1]) {
            $x + 1
        }
        menu_btns[$i].x = $x
        menu_btns[$i].y = -$h div 2
        $x + menu_btns[$i].w
        $i + 1
    }

    roll_x = -$w div 2 + 19
    roll_y = -$h div 2 + 19
    roll_w = $w - 19
    roll_h = $h - 19

    update_track_btns()
}

fn draw() {
    if (in_options) {
        draw_options()
    } else {
        draw_roll()
        transp(255)
        fbox(-WINDOW_XSIZE div 2, -WINDOW_YSIZE div 2, 19, WINDOW_YSIZE, nord0)
        fbox(-WINDOW_XSIZE div 2, -WINDOW_YSIZE div 2, WINDOW_XSIZE, 19, nord0)
    }

    pixi(app_icon, -WINDOW_XSIZE div 2 + 8, -WINDOW_YSIZE div 2 + 8)

    draw_btns()

    if (in_options == 0) {
        transp(240)
        fbox(-WINDOW_XSIZE div 2, roll_y + roll_h - roll_vol_h - roll_pan_h,
            19, roll_pan_h, nord9)
        fbox(-WINDOW_XSIZE div 2, roll_y + roll_h - roll_vol_h,
            19, roll_vol_h, nord7)
        transp(255)
        print("Pan", -WINDOW_XSIZE div 2 + 1,
            roll_y + roll_h - roll_vol_h - roll_pan_h div 2, nord0, LEFT)
        print("Vol", -WINDOW_XSIZE div 2 + 1,
            roll_y + roll_h - roll_vol_h div 2, nord0, LEFT)
    }

    if (notif_msg != 0) {
        $w = get_text_xsize(notif_msg)
        $h = get_text_ysize(notif_msg)
        transp(216)
        fbox(WINDOW_XSIZE div 2 - $w - 24,
            WINDOW_YSIZE div 2 - $h - 30,
            $w + 15, $h + 15, notif_colour)
        transp(255)
        print(notif_msg,
            WINDOW_XSIZE div 2 - 16, WINDOW_YSIZE div 2 - 22,
            nord6, BOTTOM | RIGHT)
    }
}

last_time = 0

while (running) {
    scr = get_screen()

    if (last_xsize != WINDOW_XSIZE || last_ysize != WINDOW_YSIZE) {
        resize(scr, WINDOW_XSIZE, WINDOW_YSIZE)
        last_xsize = WINDOW_XSIZE
        last_ysize = WINDOW_YSIZE
        on_resize(WINDOW_XSIZE, WINDOW_YSIZE)
        changed = 1
    }

    if (changed) {
        draw()
        frame()
        changed = 0
    } else {
        sleep(10)
    }

    frames + 1

    while (get_event()) {
        if (EVT[EVT_TYPE] == EVT_QUIT) {
            running = 0
        }
        if (EVT[EVT_TYPE] == EVT_BUTTONDOWN) {
            roll_ctrl = (EVT[EVT_FLAGS] & EVT_FLAG_CTRL)
            roll_shift = (EVT[EVT_FLAGS] & EVT_FLAG_SHIFT)
            // Check for track switch
            $t = -1
            if (EVT[EVT_KEY] >= '1' && EVT[EVT_KEY] <= '8') {
                $t = EVT[EVT_KEY] - '1'
            }
            $i = 0
            while ($i < 8) {
                // +32 for converting upper case to lower case
                if (EVT[EVT_KEY] == track_hotkeys[$i] + 32) {
                    $t = 8 + $i
                    break
                }
                $i + 1
            }
            if ($t != -1) {
                switch_track($t)
                last_track_btn = $t
                update_track_btns()
            }
            // Space bar: play/stop
            if (EVT[EVT_KEY] == ' ') {
                menu_btns_text[8].cb()
                changed = 1
            }
            // Other shortcuts
            if (roll_ctrl) {
                $i = 0
                while ($i < 11) {
                    if (EVT[EVT_KEY] == menu_btns_text[$i].shortcut) {
                        menu_btns_text[$i].cb()
                        changed = 1
                        break
                    }
                    $i + 1
                }
            }
        }
        if (EVT[EVT_TYPE] == EVT_BUTTONUP) {
            if ((EVT[EVT_FLAGS] & EVT_FLAG_CTRL) == 0) { roll_ctrl = 0 }
            if ((EVT[EVT_FLAGS] & EVT_FLAG_SHIFT) == 0) { roll_shift = 0 }
        }
        if (EVT[EVT_TYPE] == EVT_MOUSEBUTTONDOWN) {
            if (EVT[EVT_KEY] == KEY_MOUSE_SCROLLUP) {
                roll_mouse_scrollup(EVT[EVT_X], EVT[EVT_Y])
            } else {
                if (EVT[EVT_KEY] == KEY_MOUSE_SCROLLDOWN) {
                    roll_mouse_scrolldown(EVT[EVT_X], EVT[EVT_Y])
                } else {
                    btn_mouse_down(EVT[EVT_X], EVT[EVT_Y])
                    if (in_options) {
                        opt_mouse_down(EVT[EVT_X], EVT[EVT_Y])
                    } else {
                        roll_mouse_down(EVT[EVT_X], EVT[EVT_Y],
                            EVT[EVT_KEY] == KEY_MOUSE_RIGHT)
                    }
                    is_down = 1
                }
            }
        }
        if (EVT[EVT_TYPE] == EVT_MOUSEBUTTONUP) {
            btn_mouse_up(EVT[EVT_X], EVT[EVT_Y])
            if (in_options) {
                opt_mouse_up(EVT[EVT_X], EVT[EVT_Y])
            } else {
                roll_mouse_up(EVT[EVT_X], EVT[EVT_Y])
            }
            is_down = 0
        }
        if (is_down && EVT[EVT_TYPE] == EVT_MOUSEMOVE) {
            btn_mouse_move(EVT[EVT_X], EVT[EVT_Y])
            if (in_options) {
                opt_mouse_move(EVT[EVT_X], EVT[EVT_Y])
            } else {
                roll_mouse_move(EVT[EVT_X], EVT[EVT_Y])
            }
        }
        if (EVT[EVT_TYPE] == EVT_QUIT) {
            try_autosave(1)
        }
    }

    $t = get_timer(0)
    roll_tick($t - last_time)
    last_time = $t

    try_autosave(0)

    if (notif_msg != 0 && $t >= notif_time + NOTIF_DUR) {
        remove(notif_msg)
        notif_msg = 0
        changed = 1
    }

    changed = changed || btn_changed || roll_changed
    btn_changed = 0
    roll_changed = 0
}
